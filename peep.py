from lexer import Lexer
from parse import Parser
from astprinter import ASTPrinter
from intrp import Interpreter

all_options = {'-p-ast'    : 'View AST (Abstract Syntax Tree) generated by the syntax analyzer',
               '-c'        : 'Generate an equivalent x86-64 assembly program for the given source code',
               '-i'        : 'Execute the program',
               '--help'    : 'Display this info',
               '--version' : 'Shows the current version of Peep'}

peep_ver = 1.0

p_ast = False

def get_file(filename):
    try:
        file = open(filename)
    except FileNotFoundError:
        print("That file does not exist!")
        sys.exit(1)
    finally:
        return file

def c(file):
    pass

def i(file):
    root = Parser(Lexer(file)).parse()
    
    if p_ast:
        printer = ASTPrinter(root)
        printer.print_ast()
    
    interpreter = Interpreter(root)
    interpreter.interpret()

def help():
    print("Usage: python peep.py [options] insert_file_name_here.peep\nOptions:")
    
    for k, v in all_options.items():
        print(' ' + k + ' ' * (14 - len(k)) + v)
    
    print("\nNote: You can't use options '-c' and '-i' at the same time")

def version():
    print('v' + str(peep_ver))

if __name__ == "__main__":
    import sys
    
    if len(sys.argv) == 1:
        help()
    else:
        options = sys.argv[1:]
        filename = None
        
        for option in options:
            if option not in all_options.keys():
                if option.endswith('.peep'):
                    filename = option
                    break
                else:
                    print('option {} unknown'.format(option))
                    sys.exit(1)
        
        for option in options:
            if option == '-p-ast':
                p_ast = True
            elif option == '--help':
                help()
                sys.exit(0)
            elif option == '--version':
                version()
                sys.exit(0)
        
        if filename is not None:
            for option in options:
                if option == '-c':
                    file = get_file(filename)
                    c(file)
                    file.close()
                    sys.exit(0)
                elif option == '-i':
                    file = get_file(filename)
                    i(file)
                    file.close()
                    sys.exit(0)
        
        help()